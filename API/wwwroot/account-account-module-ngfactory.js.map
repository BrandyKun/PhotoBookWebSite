{"version":3,"sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/login/login.component.html","./src/app/account/login/login.component.ts","./src/app/account/register/register.component.html","./src/app/account/register/register.component.ts","./src/app/shared/components/text-input/text-input.component.html","./src/app/shared/components/text-input/text-input.component.ts"],"names":[],"mappings":"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","file":"account-account-module-ngfactory.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { AuthGuard } from '../core/guards/auth.guard';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent}\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport {  AccountRoutingModule} from './account-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [RegisterComponent, LoginComponent],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    SharedModule\n  ]\n})\nexport class AccountModule { }\n","<div class=\"d-flex justify-content-center mt-5\">\n  <div class=\"col-3\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"text-center mb-4\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\n      </div>\n\n      <app-text-input formControlName=\"email\" [label]=\"'Email Address'\"></app-text-input>\n      <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n     \n      <button [disabled]=\"loginForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n    </form>\n  </div>\n  <!-- <div class=\"col-4\">\n    <p>Form Status: {{ loginForm.status }}</p>\n    <p>Email Status: {{ loginForm.get(\"email\").status }}</p>\n    <p>Email touched: {{ loginForm.get(\"email\").touched }}</p>\n    <p>Email Dirty: {{ loginForm.get(\"email\").dirty }}</p>\n    <pre>{{ loginForm.value | json }}</pre>\n  </div> -->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AccountService } from '../account.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  returnUrl: string;\n\n  constructor(private accountService: AccountService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.returnUrl = this.activatedRoute.snapshot.queryParams.returnUrl || '/photo';\n    this.createLoginForm();\n  }\n\n  createLoginForm() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators\n      .pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')]),\n      password: new FormControl('', Validators.required)\n    })\n  }\n\n  onSubmit(){\n    this.accountService.login(this.loginForm.value).subscribe(() => {\n      this.router.navigateByUrl(this.returnUrl);\n    }, error => {\n      console.log(error);\n    });\n  }\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n    <div class=\"col-3\">\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"text-center mb-4\">\n          <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\n        </div>\n  \n        <app-text-input formControlName=\"displayName\" [label]=\"'Display Name'\"></app-text-input>\n        <app-text-input formControlName=\"email\" [label]=\"'Email Address'\"></app-text-input>\n        <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n  \n        <ul class=\"text-danger list-unstyled\" *ngIf=\"errors\">\n            <li *ngFor=\"let error of errors\">\n                {{error}}\n            </li>\n        </ul>\n       \n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Register</button>\n      </form>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AsyncValidatorFn } from '@angular/forms';\nimport { AccountService } from '../account.service';\nimport { Router } from '@angular/router';\nimport { timer, of } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  errors: string[];\n\n  constructor(private fb: FormBuilder, private accountService: AccountService, private router: Router) { }\n\n  ngOnInit() {\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      displayName: [null, [Validators.required]],\n      email: [null,\n        [Validators.required, Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')],\n        [this.validateEmailNotTaken()]\n      ],\n      password: [null, [Validators.required]]\n    });\n  }\n\n  onSubmit() {\n    this.accountService.register(this.registerForm.value).subscribe(response => {\n      this.router.navigateByUrl('/photo');\n    }, error => {\n      console.log(error);\n      this.errors = error.errors;\n    });\n  }\n\n  validateEmailNotTaken(): AsyncValidatorFn {\n    return control => {\n      return timer(500).pipe(\n        switchMap(() => {\n          if (!control.value) {\n            return of(null);\n          }\n          return this.accountService.checkEmailExist(control.value).pipe(\n            map(res => {\n              return res ? { emailExists: true } : null;\n            })\n          );\n        })\n      );\n    };\n  }\n}","<div class=\"form-label-group\">\n  <input\n    [ngClass]=\"controlDir && controlDir.control && controlDir.control.touched? !controlDir.control.valid\n          ? 'is-invalid': 'is-valid': null\"\n    [type]=\"type\"\n    (input)=\"onChange($event.target.value)\"\n    (blur)=\"onTouched()\"\n    id=\"{{ label }}\"\n    #input\n    class=\"form-control\"\n    placeholder=\"{{ label }}\"\n  />\n  <label for=\"{{ label }}\">{{ label }}</label>\n  <div\n    class=\"invalid-feedback\"\n    *ngIf=\"\n      controlDir &&\n      controlDir.control &&\n      !controlDir.control.valid &&\n      controlDir.control.touched\n    \"\n  >\n    <span *ngIf=\"controlDir.control.errors?.required\">{{ label }} is required</span>\n    <span *ngIf=\"controlDir.control.errors?.pattern\">invalid {{label}}</span>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef, Input, Self, Optional } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss']\n})\nexport class TextInputComponent implements OnInit, ControlValueAccessor {\n  @ViewChild('input', { static: true }) input: ElementRef;\n  @Input() type = 'text';\n  @Input() label: string;\n\n  constructor(@Self() @Optional() public controlDir: NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    const control = this.controlDir.control;\n    const validators = control.validator ? [control.validator] : [];\n    const asyncValidators = control.asyncValidator ? [control.asyncValidator] : [];\n\n    control.setValidators(validators);\n    control.setAsyncValidators(asyncValidators);\n    control.updateValueAndValidity();\n  }\n\n  onChange(event) { }\n\n  onTouched() { }\n\n  writeValue(obj: any): void {\n    this.input.nativeElement.value = obj || '';\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n}"],"sourceRoot":"webpack:///"}